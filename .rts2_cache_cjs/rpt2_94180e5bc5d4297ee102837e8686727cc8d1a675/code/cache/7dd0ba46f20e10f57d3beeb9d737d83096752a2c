{"code":"function parse(str) {\r\n    let out = {}, arr = str.split('&');\r\n    for (let i = 0, k, v; i < arr.length; i++) {\r\n        [k, v = ''] = arr[i].split('=');\r\n        out[k] = out[k] !== void 0 ? [].concat(out[k], v) : v;\r\n    }\r\n    return out;\r\n}\r\nexport default (req, toDecode) => {\r\n    let url = req.url;\r\n    if (url == null)\r\n        return;\r\n    let obj = req._parsedUrl;\r\n    if (obj && obj._raw === url)\r\n        return obj;\r\n    obj = {\r\n        path: url,\r\n        pathname: url,\r\n        search: null,\r\n        query: null,\r\n        href: url,\r\n        _raw: url\r\n    };\r\n    if (url.length > 1) {\r\n        if (toDecode && !req._decoded && !!~url.indexOf('%', 1)) {\r\n            url = req.url = obj.href = obj.path = obj.pathname = obj._raw = decodeURIComponent(url);\r\n            req._decoded = true;\r\n        }\r\n        let idx = url.indexOf('?', 1);\r\n        if (idx !== -1) {\r\n            obj.search = url.substring(idx);\r\n            obj.query = obj.search.substring(1);\r\n            obj.pathname = url.substring(0, idx);\r\n            if (toDecode && obj.query.length > 0) {\r\n                obj.query = parse(obj.query);\r\n            }\r\n        }\r\n    }\r\n    return (req._parsedUrl = obj);\r\n};\r\n","dts":{"name":"/home/kethan/Desktop/final/router/router/url.d.ts","writeByteOrderMark":false,"text":"declare const _default: (req: any, toDecode: boolean) => any;\r\nexport default _default;\r\n"}}
