{"code":"export default function (str, loose) {\r\n    if (str instanceof RegExp)\r\n        return { keys: [], pattern: str };\r\n    var c, o, tmp, ext, keys = [], pattern = '', arr = str.split('/');\r\n    arr[0] || arr.shift();\r\n    while (tmp = arr.shift()) {\r\n        c = tmp[0];\r\n        if (c === '*') {\r\n            keys.push('wild');\r\n            pattern += '/(.*)';\r\n        }\r\n        else if (c === ':') {\r\n            o = tmp.indexOf('?', 1);\r\n            ext = tmp.indexOf('.', 1);\r\n            keys.push(tmp.substring(1, !!~o ? o : !!~ext ? ext : tmp.length));\r\n            pattern += !!~o && !~ext ? '(?:/([^/]+?))?' : '/([^/]+?)';\r\n            if (!!~ext)\r\n                pattern += (!!~o ? '?' : '') + '\\\\' + tmp.substring(ext);\r\n        }\r\n        else {\r\n            pattern += '/' + tmp;\r\n        }\r\n    }\r\n    return {\r\n        keys: keys,\r\n        pattern: new RegExp('^' + pattern + (loose ? '(?=$|\\/)' : '\\/?$'), 'i')\r\n    };\r\n}\r\n","dts":{"name":"/home/kethan/Desktop/final/router/router/regexparam.d.ts","writeByteOrderMark":false,"text":"export default function (str: any, loose?: boolean): {\r\n    keys: any;\r\n    pattern: RegExp;\r\n};\r\n"}}
